/*grid 핵심 개념
1. display : grid 로 설정
2. grid를 부모 container에서 모두 격자를 미리 만들어둔다. (grid-template-columns & grid-template-rows 등으로)
방법 1. 
grid-template-areas 로 피파 포메이션 짜듯이 배치한다. (아래의 코드는 grid-template-areas로 구현) 
방법 2. 내부박스 키우기 (영역설정)
grid-row : 2/4 
grid-col : 2/4 
-> 이 박스는 row 2부터 4, col은 2부터 4까지 차지한다. 
*/

.grid-container {
    display : grid; /*내부의 div들은 모두 grid형태로 진열된다.*/
/*    격자의 폭/높이를 지정 */
    grid-template-columns: 200px 200px 200px; /*격자의 열의 폭 & 개수*/
   /*현재 columns의 개수는 3개고 가로 길이는 100px로 지정, 만약 여기서 100px을 4개 쓴다면 밑에는 그만큼 차감된 개수(2개)가 적용된다.*/
   /* 1fr :  fraction, 분수 ex) 합쳐서 1이된다. 그럼 1fr은 1/3만큼 차지 */
    
    grid-template-rows: 200px 200px 200px;
    
/*    grid-gap:10px; grid간에 간격 10px*/
    
/*    부모영역에서 배치를 모두 담당*/
    grid-template-areas: 
        "area-1 area-1 area-2"
        "area-1 area-1 area-3"
        "area-4 area-5 area-6"
}

.grid-container div{
    border : 1px solid black; 
}

.grid-1 {
    grid-area: area-1; 
}

.grid-2 {
    grid-area : area-2; 
}

.grid-3 {
    grid-area : area-3;
}

.grid-4 {
    grid-area : area-4;
}

.grid-5 {
    grid-area : area-5;
}

.grid-6 {
    grid-area : area-6;
}


@media screen and (max-width : 768px){
    .grid-container{
        grid-template-rows: 200px 200px 200px 200px 200px 200px;
        grid-template-columns: 200px; 
        grid-template-areas: 
        "area-1"
        "area-2"
        "area-3"
        "area-4"
        "area-5"
        "area-6"
    }
}